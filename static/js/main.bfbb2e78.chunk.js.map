{"version":3,"sources":["components/DropDown/DropDownItems/DropDownItems.js","components/DropDown/DropDown.js","components/UI/Logo/Logo.js","components/Navigation/SideDrawer/SideDrawer.js","components/UI/Backdrop/Backdrop.js","components/Navigation/NavigationBar/NavigationBar.js","components/Chart/Bar/Bar.js","components/Chart/Chart.js","components/PlayButton/PlayButton.js","components/ControlPanel/SpeedControls/SpeedControls.js","components/ControlPanel/ControlPanel.js","components/ColorTray/ColorTray.js","containers/SortVisualizer/SortVisualizer.js","algorithms/helpers.js","algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/selectionSort.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownItems","props","Object","keys","items","map","item","i","className","onClick","onItemSelection","DropDown","state","selectedItem","header","dropdownDisplay","itemSelector","name","setState","prevState","selector","_dropdownHandler","displayStyle","this","chevronType","style","width","widthProp","icon","display","Component","Logo","SideDrawer","isVisible","algoItems","algoHeader","algoSelector","sizeItems","sizeHeader","sizeSelector","Backdrop","toggle","show","ALGORITHM_ARRAY","SIZE_ARRAY","NavigationBar","sideDrawerDisplay","sortSelector","sideDrawerToggle","Bar","classes","stateA","stateB","barWidth","size","margin","height","Chart","Bars","array","num","idx","compareArr","includes","swapArr","Button","sort","disabled","playing","SPEED_ARRAY","SpeedControls","speedSelector","ControlPanel","onRestart","repeatDisabled","selected","onPause","onPlay","onSpeedSelect","ColorTray","ColorElements","id","color","title","elmnt","backgroundColor","SortVisualizer","trace","sortedIndices","traceStep","speed","timeoutQueue","_reset","_setVisualization","compare","swap","length","pause","continue","clearQueue","forEach","clearTimeout","play","repeatDisableHandler","queue","timer","setTimeout","push","slice","restart","prevProps","console","log","playerFunction","playState","newTrace","arr","addToTrace","cmp","swp","j","temp","lastSorted","bubbleSort","insertionSort","key","mergeSort","recursiveSort","l","h","m","Math","floor","l1","l2","array1","array2","k","merge","quickSort","low","high","pivot","counter_index","partisan","selectionSort","minIdx","App","ALGORITHMS","algorithms","algorithm","_generateArray","round","random","_generateTrace","nums","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faChevronUp","faChevronDown","faPlay","faRedo","faBars","faPause","faTimes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mfAceA,G,kBAZO,SAACC,GAEvB,OAAO,8BACEC,OAAOC,KAAKF,EAAMG,OAAOC,KAAI,SAACC,EAAKC,GAAN,OAAY,oBACtCC,UAAY,kBAEZC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAHC,SAIjCA,GAFEC,UC2DJI,E,4MAxDXC,MAAS,CACLC,aAAe,EAAKZ,MAAMa,OAC1BC,iBAAkB,G,EAItBC,aAAe,SAACC,GAEZ,EAAKC,UAAS,SAACC,GACX,MAAO,CACPN,aAAeI,EACfF,iBAAmBI,EAAUJ,oBAIjC,EAAKd,MAAMmB,SAAS,EAAKnB,MAAMG,MAAMa,K,EAIzCI,iBAAmB,WACf,EAAKH,UAAS,SAACC,GACX,MAAO,CACHJ,iBAAmBI,EAAUJ,qB,uDAQrC,IAAMO,EAAeC,KAAKX,MAAMG,gBAAkB,QAAU,OACtDS,EAAcD,KAAKX,MAAMG,gBAAkB,aAAe,eAEhE,OACI,sBAAKP,UAAY,YAAYiB,MAAS,CAACC,MAAQH,KAAKtB,MAAM0B,WAA1D,UACI,oBAAInB,UAAY,qBAAhB,SACI,sBAAKA,UAAY,gCAAjB,UACI,oBAAIA,UAAY,sBAAhB,SAAuCe,KAAKX,MAAMC,eAClD,wBAAQJ,QAASc,KAAKF,iBAAtB,SACI,cAAC,IAAD,CAAiBO,KAAQJ,WAIrC,oBAAIhB,UAAY,kBAAkBiB,MAAS,CAACI,QAAUP,GAAtD,SACI,cAAC,EAAD,CACAZ,gBAAmBa,KAAKP,aACxBZ,MAASmB,KAAKtB,MAAMG,iB,GAhDjB0B,aCJRC,G,YAFF,kBAAO,oBAAIvB,UAAY,OAAhB,kCC2BLwB,EAzBI,SAAC/B,GAEhB,IAAMgC,EAAYhC,EAAM4B,QAExB,OAAO,qBAAKrB,UAAY,aAAaiB,MAAS,CAACI,QAAUI,EAAY,QAAU,QAAxE,SACH,sBAAKzB,UAAY,wBAAjB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAY,yBAAjB,UACI,cAAC,EAAD,CACQJ,MAASH,EAAMiC,UACfpB,OAAUb,EAAMkC,WAChBf,SAAYnB,EAAMmC,aAClBT,UAAa,MACrB,cAAC,EAAD,CACQvB,MAASH,EAAMoC,UACfvB,OAAUb,EAAMqC,WAChBlB,SAAYnB,EAAMsC,aAClBZ,UAAa,cCdtBa,G,MALE,SAACvC,GAAD,OAAW,qBACxBO,UAAY,WACZC,QAAWR,EAAMwC,OACjBhB,MAAS,CAACI,QAAU5B,EAAMyC,KAAO,QAAU,YCIzCC,EAAkB,CACpB,iBAAmB,gBACnB,cAAgB,aAChB,iBAAmB,gBACnB,aAAe,YACf,aAAe,aAGbC,EAAa,CACf,GAAO,GACP,GAAO,GACP,GAAO,GACP,GAAO,GACP,IAAQ,KA6CGC,E,uKAtCP,IAAMZ,EAAYV,KAAKtB,MAAM6C,kBAE7B,OACA,sBAAKtC,UAAY,iBAAjB,UACI,cAAC,EAAD,CACA6B,UAAaO,EACbN,WAAa,MACbC,aAAgBhB,KAAKtB,MAAMsC,aAC3BL,UAAaS,EACbR,WAAa,iBACbC,aAAgBb,KAAKtB,MAAM8C,aAC3BlB,QAAWI,IACX,cAAC,EAAD,CAAUQ,OAAUlB,KAAKtB,MAAM+C,iBAAkBN,KAAQT,IACzD,sBAAKzB,UAAY,4BAAjB,UACI,wBACAA,UAAY,uBACZC,QAAWc,KAAKtB,MAAM+C,iBAFtB,SAGQ,cAAC,IAAD,CAAiBpB,KAAQK,EAAY,QAAU,WAEvD,cAAC,EAAD,IACA,sBAAKzB,UAAY,wBAAjB,UACI,cAAC,EAAD,CACIJ,MAASwC,EACT9B,OAAS,MACTM,SAAYG,KAAKtB,MAAMsC,aACvBZ,UAAa,KACjB,cAAC,EAAD,CACIvB,MAASuC,EACT7B,OAAS,iBACTM,SAAYG,KAAKtB,MAAM8C,aACvBpB,UAAa,mB,GAlCTG,aCGbmB,G,MA1BH,SAAChD,GAET,IAAIiD,EAAU,OAEVjD,EAAMkD,OACND,GAAW,SACLjD,EAAMmD,SACZF,GAAW,UAGf,IAAMG,EAAY,IAAMpD,EAAMqD,KAAQ,EAEhCC,EAASF,EAAW,EAE1B,OACA,qBACI7C,UAAa0C,EACbzB,MAAS,CACL+B,OAASvD,EAAMuD,OACf9B,MAAK,UAAM2B,EAAN,KACLE,OAAM,cAAUA,EAAV,WCDHE,G,MAlBD,SAACxD,GAEX,IAAMyD,EAAOzD,EAAM0D,MAAMtD,KAAI,SAACuD,EAAIC,GAE9B,OAAQ,cAAC,EAAD,CACRL,OAAUI,EACVT,OAAUlD,EAAM6D,WAAWC,SAASF,GACpCT,OAAUnD,EAAM+D,QAAQD,SAASF,GACjCP,KAAQrD,EAAMqD,MAJMO,MAQxB,OACA,qBAAKrD,UAAY,QAAjB,SACKkD,MCAMO,G,MAXA,SAAChE,GAAD,OACX,wBACIO,UAAY,cACZC,QAAWR,EAAMiE,KACjBC,SAAYlE,EAAMkE,SAHtB,SAII,cAAC,IAAD,CACA3D,UAAY,oBACZoB,KAAQ3B,EAAMmE,QAAU,QAAU,aCVpCC,EAAc,CAAC,GAAO,EAAG,GAAO,EAAG,GAAO,EAAG,GAAO,GAa3CC,EAXO,SAACrE,GAEnB,OACA,8BACI,cAAC,EAAD,CAAUG,MAASiE,EACnBvD,OAAU,KACVM,SAAYnB,EAAMsE,cAClB7C,MAAS,QCaF8C,G,MAnBM,SAACvE,GAElB,OACA,sBAAKO,UAAY,gBAAjB,UACI,wBAAQA,UAAY,gCACpBC,QAAWR,EAAMwE,UACjBN,SAAYlE,EAAMyE,eAFlB,SAGI,cAAC,IAAD,CAAiB9C,KAAO,WAE5B,cAAC,EAAD,CACAuC,UAAalE,EAAM0E,SACnBP,QAAWnE,EAAMmE,QACjBF,KAAQjE,EAAMmE,QAAUnE,EAAM2E,QAAU3E,EAAM4E,SAC9C,cAAC,EAAD,CAAeN,cAAiBtE,EAAM6E,qBCQ/BC,G,MAxBG,WAEd,IAKMC,EALW,CAAC,CAACC,GAAK,IAAIC,MAAQ,UAAWC,MAAQ,WACvD,CAACF,GAAK,IAAIC,MAAQ,UAAWC,MAAQ,SAIN9E,KAAI,SAAC+E,GAEhC,OAAQ,sBAAK5E,UAAY,sBAAjB,UACJ,qBACAA,UAAY,6BACZiB,MAAS,CAAC4D,gBAAkBD,EAAMF,SAClC,sBAAM1E,UAAY,6BAAlB,SAAgD4E,EAAMD,UAJJC,EAAMH,OAShE,OAAQ,qBAAKzE,UAAY,aAAjB,SACHwE,MCoJMM,G,kNAjKX1E,MAAQ,CACJ2E,MAAQ,GACR5B,MAAQ,GACRG,WAAa,GACbE,QAAU,GACVwB,cAAgB,GAChBC,WAAa,EACbC,MAAQ,EACRC,aAAe,I,EAuBnBC,OAAS,SAACjC,GACN,EAAKzC,SAAS,CACVqE,MAAQ,GACR5B,MAAK,YAAOA,GACZG,WAAa,GACbE,QAAU,GACVwB,cAAgB,GAChBC,WAAa,K,EAIrBI,kBAAoB,SAACvF,GACjB,EAAKY,UAAS,iBAAO,CACjByC,MAAQrD,EAAKqD,MACbG,WAAaxD,EAAKwF,QAClB9B,QAAU1D,EAAKyF,KACfP,cAAgBlF,EAAKkF,mB,EAK7BjB,cAAgB,SAACmB,GAEb,IAAMtB,EAAU,EAAKxD,MAAM+E,aAAaK,OAAS,EAEjD,EAAKC,QACL,EAAK/E,SAAS,CACVwE,MAAQA,IACT,WACItB,GAAS,EAAK8B,e,EAKzBC,WAAa,WAET,EAAKvF,MAAM+E,aAAaS,SAAQ,SAAC9F,EAAMC,GACnC8F,aAAa/F,MAGjB,EAAKY,SAAS,CAACyE,aAAe,M,EAKlCW,KAAO,SAACf,GAEJ,EAAKtF,MAAMsG,sBAAqB,GAEhC,IAAMC,EAAQ,GAERC,EAAQ,IAAM,EAAK7F,MAAM8E,MAE/BH,EAAMa,SAAQ,SAAC9F,EAAMC,GACjB,IAAI0E,EAAKyB,YAAW,SAACpG,GACjB,EAAKY,UAAS,SAACC,GAAD,MAAgB,CAACsE,UAAYtE,EAAUsE,UAAY,KACjE,EAAKI,kBAAkBvF,MACxBC,EAAIkG,EAAOnG,GAEdkG,EAAMG,KAAK1B,MAGf,IAAIA,EAAKyB,WAAW,EAAKP,WAAYZ,EAAMS,OAASS,GAEpDD,EAAMG,KAAK1B,GAEX,EAAK/D,SAAS,CAACyE,aAAea,K,EAIlCP,MAAQ,WACJ,EAAKE,c,EAITD,SAAW,WACP,IAAMX,EAAQ,EAAK3E,MAAM2E,MAAMqB,MAAM,EAAKhG,MAAM6E,WAChD,EAAKa,KAAKf,I,EAGdsB,QAAU,WACN,EAAKV,aAEL,EAAKjF,SAAS,CACVyC,MAAK,YAAO,EAAK1D,MAAM0D,OACvB8B,WAAa,EACb3B,WAAa,GACbE,QAAU,GACVwB,cAAgB,KAGpB,EAAKc,KAAK,EAAK1F,MAAM2E,Q,kEA9GrBhE,KAAKqE,OAAOrE,KAAKtB,MAAM0D,S,yCAGRmD,EAAW3F,GAEvB2F,EAAUnD,QAAUpC,KAAKtB,MAAM0D,QAC9BoD,QAAQC,IAAI,mBACZzF,KAAKqE,OAAOrE,KAAKtB,MAAM0D,QAIxBxC,EAAUoE,QAAUhE,KAAKtB,MAAMsF,QAC9BhE,KAAK4E,aACL5E,KAAKL,SAAS,CAACqE,MAAQhE,KAAKtB,MAAMsF,W,+BAsGjC,IAAD,OAEA0B,EAAiB,kBAAM,EAAKX,KAAK,EAAK1F,MAAM2E,SAEnB,IAA1BhE,KAAKX,MAAM6E,YACVwB,EAAiB1F,KAAK2E,UAG1B,IAAMgB,EAAY3F,KAAKX,MAAM+E,aAAaK,OAAS,EAEnD,OACA,sBAAKxF,UAAY,kBAAjB,UACQ,cAAC,EAAD,CACAmD,MAASpC,KAAKX,MAAM+C,MACpBG,WAAcvC,KAAKX,MAAMkD,WACzBE,QAAWzC,KAAKX,MAAMoD,QACtBV,KAAQ/B,KAAKtB,MAAMqD,OAEnB,cAAC,EAAD,CACAsB,QAAWrD,KAAK0E,MAChBpB,OAAUoC,EACVnC,cAAiBvD,KAAKgD,cACtBH,QAAW8C,EACXvC,SAAYpD,KAAKtB,MAAM0E,SACvBF,UAAalD,KAAKsF,QAClBnC,eAAkBnD,KAAKtB,MAAMyE,iBAE7B,cAAC,EAAD,W,GA5Ja5C,cCcvBqF,EAAW,SAACC,GACd,MAAO,CAAC,CACJzD,MAAK,YAAOyD,GACZtB,QAAU,GACVC,KAAO,GACPP,cAAgB,MAGlB6B,EAAa,SAAC9B,EAAO6B,EAAKlD,GAA8B,IAAxBoD,EAAuB,uDAAjB,GAAIC,EAAa,uDAAP,GAClDhC,EAAMoB,KAAK,CACPhD,MAAK,YAAOyD,GACZtB,QAAO,YAAOwB,GACdvB,KAAI,YAAOwB,GACX/B,cAAa,YAAOtB,MAItB6B,EAAO,SAACpC,EAAOpD,EAAGiH,GACpB,IAAIC,EAAO9D,EAAMpD,GACjBoD,EAAMpD,GAAKoD,EAAM6D,GACjB7D,EAAM6D,GAAKC,GAGTC,EAAa,SAACnC,GAChB,OAAOA,EAAMA,EAAMS,OAAS,GAAGR,eC3CtBmC,EAAa,SAACP,GAMvB,IAJA,IAAMzD,EAAK,YAAOyD,GAEZ7B,EAAS4B,EAASxD,GAEhBpD,EAAI,EAAGA,EAAIoD,EAAMqC,OAAS,EAAEzF,IAEhC,IAAI,IAAIiH,EAAI,EAAGA,EAAI7D,EAAMqC,OAASzF,EAAI,EAAGiH,IAErCH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAO,CAACiC,EAAGA,EAAE,IAE7C7D,EAAM6D,GAAK7D,EAAM6D,EAAI,KAEpBH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAO,GAAG,CAACiC,EAAGA,EAAE,IACpDH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAO,GAAG,CAACiC,EAAGA,EAAE,IAEpDzB,EAAKpC,EAAO6D,EAAGA,EAAE,GAEjBH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,KAQhD,OAFA8B,EAAW9B,EAAO5B,EAAO+D,EAAWnC,IAE7BA,GC3BEqC,EAAgB,SAACR,GAM1B,IAJA,IAAMzD,EAAK,YAAOyD,GAEd7B,EAAS4B,EAASxD,GAEdpD,EAAI,EAAGA,EAAIoD,EAAMqC,OAAQzF,IAAI,CAKjC,IAHA,IAAIsH,EAAMlE,EAAMpD,GACZiH,EAAIjH,EAAI,EAENiH,GAAK,GAAK7D,EAAM6D,GAAKK,GACvBR,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,CAAChF,EAAGiH,IAC/C7D,EAAM6D,EAAI,GAAK7D,EAAM6D,GACrBA,GAAI,EAGRH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAQ,GAAI,CAAChF,EAAGiH,EAAE,IACtDH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAQ,GAAI,CAAChF,EAAGiH,EAAE,IAEtD7D,EAAM6D,EAAI,GAAKK,EACfR,EAAW9B,EAAO5B,EAAM+D,EAAWnC,IAIvC,OAAOA,GCzBEuC,EAAY,SAACV,GAEtB,IAAMzD,EAAK,YAAOyD,GAEd7B,EAAQ4B,EAASxD,GAgFrB,OAbA,SAASoE,EAAcpE,EAAOqE,EAAGC,GAE7B,GAAGD,EAAIC,EAAE,CAEL,IAAIC,EAAIC,KAAKC,OAAOJ,EAAIC,GAAG,GAC3BF,EAAcpE,EAAOqE,EAAGE,GACxBH,EAAcpE,EAAOuE,EAAI,EAAGD,GAvEpC,SAAetE,EAAOqE,EAAEE,EAAGD,GAQvB,IANA,IAAII,EAAKH,EAAIF,EAAI,EACbM,EAAKL,EAAIC,EAETK,EAAS,GACTC,EAAS,GAELjI,EAAI,EAAGA,EAAI8H,EAAI9H,GAAG,EACtBgI,EAAOhI,GAAKoD,EAAMqE,EAAIzH,GAG1B,IAAI,IAAIiH,EAAI,EAAGA,EAAIc,EAAId,IACnBgB,EAAOhB,GAAK7D,EAAMuE,EAAI,EAAIV,GAO9B,IAJA,IAAIjH,EAAI,EACJiH,EAAI,EACJiB,EAAIT,EAEDzH,EAAI8H,GAAQb,EAAIc,GAEnBjB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAO,CAACyC,EAAIzH,EAAG2H,EAAI,EAAIV,IAEvDe,EAAOhI,IAAMiI,EAAOhB,IACnBH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGT,EAAIzH,IACvD8G,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGT,EAAIzH,IACvDoD,EAAM8E,GAAKF,EAAOhI,GAClB8G,EAAW9B,EAAO5B,EAAO+D,EAAWnC,IAEpChF,GAAG,IAEH8G,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGP,EAAI,EAAIV,IAC3DH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGP,EAAI,EAAIV,IAC3D7D,EAAM8E,GAAKD,EAAOhB,GAClBH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,IACnCiC,GAAG,GAGPiB,GAAG,EAIP,KAAMlI,EAAI8H,GACNhB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGT,EAAIzH,IACvD8G,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGT,EAAIzH,IACvDoD,EAAM8E,GAAKF,EAAOhI,GAClB8G,EAAW9B,EAAO5B,EAAO+D,EAAWnC,IACpChF,GAAG,EACHkI,GAAG,EAGP,KAAMjB,EAAIc,GACNjB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGP,EAAI,EAAIV,IAC3DH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACkD,EAAGP,EAAI,EAAIV,IAC3D7D,EAAM8E,GAAKD,EAAOhB,GAClBH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,IACnCiC,GAAG,EACHiB,GAAG,EAcHC,CAAM/E,EAAOqE,EAAGE,EAAGD,IAI3BF,CAAcpE,EAAO,EAAGA,EAAMqC,OAAS,GAEhCT,GCpFEoD,EAAY,SAACvB,GAEtB,IAAMzD,EAAK,YAAOyD,GAEd7B,EAAQ4B,EAASxD,GA2CrB,OAdA,SAASoE,EAAcpE,EAAOiF,EAAKC,GAE/B,GAAGD,EAAMC,EAAK,CAEV,IAAIC,EA/BZ,SAAkBnF,EAAOiF,EAAKC,GAK1B,IAHA,IAAIC,EAAQnF,EAAMkF,GACdE,EAAgBH,EAEZrI,EAAIqI,EAAKrI,EAAIsI,EAAMtI,IACvB8G,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,CAACsD,EAAMtI,IAC/CoD,EAAMpD,IAAMuI,IACXzB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACwD,EAAexI,IAC/D8G,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAQ,GAAI,CAACwD,EAAexI,IAC/DwF,EAAKpC,EAAOoF,EAAexI,GAC3B8G,EAAW9B,EAAO5B,EAAO+D,EAAWnC,IACpCwD,GAAe,GAWvB,OAPA1B,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAO,GAAI,CAACwD,EAAeF,IAC9DxB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAO,GAAI,CAACwD,EAAeF,IAE9D9C,EAAKpC,EAAOoF,EAAeF,GAE3BxB,EAAW9B,EAAO5B,EAAM+D,EAAWnC,IAE5BwD,EAQSC,CAASrF,EAAOiF,EAAKC,GAEjCd,EAAcpE,EAAOiF,EAAKE,EAAQ,GAClCf,EAAcpE,EAAOmF,EAAQ,EAAGD,IAKxCd,CAAcpE,EAAO,EAAGA,EAAMqC,OAAS,GAEhCT,GC/CE0D,EAAgB,SAAC7B,GAM1B,IAJA,IAAMzD,EAAK,YAAOyD,GAEZ7B,EAAS4B,EAASxD,GAEhBpD,EAAI,EAAGA,EAAIoD,EAAMqC,OAAS,EAAGzF,IAAI,CAIrC,IAFA,IAAI2I,EAAS3I,EAELiH,EAAIjH,EAAI,EAAGiH,EAAI7D,EAAMqC,OAAQwB,IAEjCH,EAAW9B,EAAO5B,EAAM+D,EAAWnC,GAAO,CAAC2D,EAAQ1B,IAEhD7D,EAAM6D,GAAK7D,EAAMuF,KAChBA,EAAS1B,GAIjBH,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAO,GAAG,CAAChF,EAAG2I,IAClD7B,EAAW9B,EAAO5B,EAAO+D,EAAWnC,GAAO,GAAG,CAAChF,EAAG2I,IAElDnD,EAAKpC,EAAOpD,EAAG2I,GAEf7B,EAAW9B,EAAO5B,EAAO+D,EAAWnC,IAIxC,OAAOA,GC0FI4D,G,kNA9GXC,WAAa,CACT,cAAkBC,EAClB,WAAeA,EACf,cAAkBA,EAClB,UAAcA,EACd,UAAcA,G,EAGlBzI,MAAQ,CACJ+C,MAAQ,GACR4B,MAAQ,GACR+D,UAAY,gBACZhG,KAAO,IACPR,mBAAoB,EACpB4B,gBAAiB,G,EAQrB6E,eAAiB,WAMb,IAJA,IAAMnC,EAAM,GAEN9D,EAAO,EAAK1C,MAAM0C,KAEhB/C,EAAI,EAAGA,EAAI+C,EAAM/C,IAAI,CACzB,IAAMqD,EAAMuE,KAAKqB,MAAO,IAAArB,KAAKsB,SAAyB,IACtDrC,EAAIT,KAAK/C,GAGb,EAAK1C,SAAS,CACVyC,MAAQyD,GACT,EAAKsC,iB,EAGZA,eAAiB,WAEb,IAAMC,EAAI,YAAO,EAAK/I,MAAM+C,OAEtBO,EAAO,EAAKkF,WAAW,EAAKxI,MAAM0I,WAExC,GAAGpF,EAAK,CAEJ,IAAMqB,EAAQrB,EAAKyF,GAEnB,EAAKzI,SAAS,CACVqE,MAAQA,M,EAKpBhD,aAAe,SAACe,GAEZ,EAAKpC,SAAS,CACVoC,KAAOA,GACR,EAAKiG,iB,EAIZxG,aAAe,SAACuG,GAEZ,EAAK/C,sBAAqB,GAE1B,EAAKrF,SAAS,CACVoI,UAAYA,GACb,EAAKC,iB,EAGZvG,iBAAmB,WAEf,EAAK9B,UAAS,SAACC,GACX,MAAM,CACF2B,mBAAqB3B,EAAU2B,uB,EAK3CyD,qBAAuB,SAACpC,GAEpB,EAAKjD,SAAS,CAACwD,eAAiBP,K,kEA/DhC5C,KAAKgI,mB,+BAsEL,OACI,sBAAK/I,UAAY,MAAjB,UACI,cAAC,EAAD,CAAeuC,aAAgBxB,KAAKwB,aACpCR,aAAgBhB,KAAKgB,aACrBS,iBAAoBzB,KAAKyB,iBACzBF,kBAAqBvB,KAAKX,MAAMkC,oBAChC,cAAC,EAAD,CACAa,MAASpC,KAAKX,MAAM+C,MACpB4B,MAAShE,KAAKX,MAAM2E,MACpBjC,KAAQ/B,KAAKX,MAAM0C,KACnBqB,SAAqC,KAAzBpD,KAAKX,MAAM0I,UACvB5E,eAAkBnD,KAAKX,MAAM8D,eAC7B6B,qBAAwBhF,KAAKgF,8B,GAvG3BzE,cCIH8H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCCdQ,IAAQC,IAAIC,IAAaC,IAAeC,IAAOC,IAAQC,IAAQC,IAASC,KAExEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtB,O","file":"static/js/main.bfbb2e78.chunk.js","sourcesContent":["import './DropDownItems.css';\n\nconst DropDownItems = (props) => {\n\nreturn <div>\n        {Object.keys(props.items).map((item,i) => <li \n            className = 'drop-down__item'\n            key = {i}\n            onClick={() => props.onItemSelection(item)}>\n                {item}\n        </li>)}\n    </div>\n}\n\nexport default DropDownItems;","import { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './DropDown.css';\nimport DropDownItems from './DropDownItems/DropDownItems';\n\n\n\nclass DropDown extends Component {\n\n    state  = {\n        selectedItem : this.props.header,\n        dropdownDisplay : false,\n    }\n\n\n    itemSelector = (name) =>{\n\n        this.setState((prevState) => {\n            return {\n            selectedItem : name,\n            dropdownDisplay : !prevState.dropdownDisplay,\n            }\n        });\n\n        this.props.selector(this.props.items[name]);\n\n    }\n\n    _dropdownHandler = () => {\n        this.setState((prevState) => {\n            return {\n                dropdownDisplay : !prevState.dropdownDisplay,\n            }\n        })\n\n    }\n\n    render() {\n\n        const displayStyle = this.state.dropdownDisplay ? 'block' : 'none';\n        const chevronType = this.state.dropdownDisplay ? 'chevron-up' : 'chevron-down';\n\n        return (\n            <div className = 'drop-down' style = {{width : this.props.widthProp}}>\n                <ul className = 'drop-down__default'>\n                    <div className = 'drop-down__default__container'>\n                        <li className = 'drop-down__selected'>{this.state.selectedItem}</li>\n                        <button onClick={this._dropdownHandler}>\n                            <FontAwesomeIcon icon = {chevronType}/>\n                        </button>\n                    </div>\n                </ul>\n                <ul className = 'drop-down__menu' style = {{display : displayStyle}}>\n                    <DropDownItems \n                    onItemSelection = {this.itemSelector} \n                    items = {this.props.items}\n                    />\n                </ul>                \n            </div>      \n        )\n    }\n\n\n}\n\nexport default DropDown;","import './Logo.css';\n\nconst Logo = () => (<h3 className = 'logo' >Sorting Visualizer</h3>);\n\nexport default Logo;","import './SideDrawer.css';\nimport Logo from '../../UI/Logo/Logo';\nimport Dropdown from '../../DropDown/DropDown';\n\nconst SideDrawer = (props) =>{\n\n    const isVisible = props.display;\n\n    return(<div className = 'sideDrawer' style = {{display : isVisible ? 'block' : 'none'}}>\n        <div className = 'sideDrawer__container'>\n            <Logo/>\n            <div className = 'sideDrawer__navigation'>\n                <Dropdown \n                        items = {props.algoItems} \n                        header = {props.algoHeader}\n                        selector = {props.algoSelector}\n                        widthProp = {160}/>                        \n                <Dropdown \n                        items = {props.sizeItems} \n                        header = {props.sizeHeader}\n                        selector = {props.sizeSelector}\n                        widthProp = {80}\n                />                    \n            </div>\n        </div>\n\n    </div>)\n}\n\nexport default SideDrawer;","import './Backdrop.css';\n\nconst Backdrop = (props) =>(<div \n    className = 'backdrop'\n    onClick = {props.toggle}\n    style = {{display : props.show ? 'block' : 'none'}}></div>);\n\nexport default Backdrop;","import {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './NavigationBar.css';\nimport Dropdown from '../../DropDown/DropDown';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Logo from '../../UI/Logo/Logo';\n\nconst ALGORITHM_ARRAY = {\n    'Selection Sort' : 'selectionSort',\n    'Bubble Sort' : 'bubbleSort',\n    'Insertion Sort' : 'insertionSort', \n    'Quick Sort' : 'quickSort', \n    'Merge Sort' : 'mergeSort'\n    };\n\nconst SIZE_ARRAY = {\n    '10' : 10,\n    '20' : 20,\n    '50' : 50,\n    '75' : 75,\n    '100' : 100,\n};\n\nclass NavigationBar extends Component{\n\n    render(){\n\n        const isVisible = this.props.sideDrawerDisplay\n\n        return(\n        <div className = 'navigation-bar'>\n            <SideDrawer\n            sizeItems = {SIZE_ARRAY} \n            sizeHeader = '100'\n            sizeSelector = {this.props.sizeSelector}\n            algoItems = {ALGORITHM_ARRAY} \n            algoHeader = 'Selection Sort'\n            algoSelector = {this.props.sortSelector}\n            display = {isVisible}/>\n            <Backdrop toggle = {this.props.sideDrawerToggle} show = {isVisible}/>\n            <div className = 'navigation-bar__container'>\n                <button \n                className = 'navigation-bar__menu' \n                onClick = {this.props.sideDrawerToggle}>\n                        <FontAwesomeIcon icon = {isVisible ? 'times' : 'bars'}/>\n                </button>\n                <Logo/>\n                <div className = 'navigation-bar__links'>\n                    <Dropdown \n                        items = {SIZE_ARRAY} \n                        header = '100'\n                        selector = {this.props.sizeSelector}\n                        widthProp = {80}/>                    \n                    <Dropdown \n                        items = {ALGORITHM_ARRAY} \n                        header = 'Selection Sort'\n                        selector = {this.props.sortSelector}\n                        widthProp = {160}/>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default NavigationBar;","import './Bar.css';\n\nconst Bar = (props) => { \n\n    let classes = 'bar ';\n\n    if (props.stateA) {\n        classes += 'groupA';\n    }else if (props.stateB) {\n        classes += 'groupB';\n    }\n\n    const barWidth = (100 / props.size) * 2;\n\n    const margin = barWidth / 2;\n\n    return (\n    <div \n        className = {classes} \n        style = {{\n            height : props.height, \n            width : `${barWidth}%`, \n            margin : `0px ${margin}px`\n            }}>\n    </div>);\n\n}\n\nexport default Bar;","import Bar from './Bar/Bar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n\n    const Bars = props.array.map((num,idx) => {\n    \n        return (<Bar key = {idx}\n        height = {num} \n        stateA = {props.compareArr.includes(idx)}\n        stateB = {props.swapArr.includes(idx)} \n        size = {props.size}/>);\n\n    });\n                \n    return(\n    <div className = 'chart' >\n        {Bars}\n    </div>);\n}\n\nexport default Chart;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './PlayButton.css';\n\n\n\nconst Button = (props) => (\n    <button \n        className = 'play-button'\n        onClick = {props.sort} \n        disabled = {props.disabled}>\n        <FontAwesomeIcon \n        className = 'play-button__icon' \n        icon = {props.playing ? 'pause' : 'play'} />\n    </button>);\n\n\nexport default Button;","import DropDown from '../../DropDown/DropDown';\n\n\nconst SPEED_ARRAY = {'x1' : 1, 'x2' : 2, 'x3' : 3, 'x4' : 4};\n\nconst SpeedControls = (props) =>{\n\n    return(\n    <div>\n        <DropDown items = {SPEED_ARRAY} \n        header = {\"x1\"}\n        selector = {props.speedSelector}\n        width = {60}/>\n    </div>)\n}\n\nexport default SpeedControls;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport PlayButton from '../PlayButton/PlayButton';\nimport SpeedControls from './SpeedControls/SpeedControls';\nimport './ControlPanel.css';\n\nconst ControlPanel = (props) => {\n\n    return (\n    <div className = 'control-panel'>\n        <button className = 'control-panel__repeat__button' \n        onClick = {props.onRestart}\n        disabled = {props.repeatDisabled}>\n            <FontAwesomeIcon icon = \"redo\"/>\n        </button>\n        <PlayButton\n        disabled = {!props.selected} \n        playing = {props.playing}\n        sort = {props.playing ? props.onPause : props.onPlay}/>\n        <SpeedControls speedSelector = {props.onSpeedSelect}/>\n    </div>);\n\n\n}\n\nexport default ControlPanel;","import './ColorTray.css';\n\n\nconst ColorTray = () => {\n\n    const elements = [{id : '1',color : '#E33E57', title : 'Compare'},\n    {id : '2',color : '#F7B538', title : 'Swap'},\n    // {id : '3',color : 'green', title : 'Sorted'}\n    ];\n\n    const ColorElements = elements.map((elmnt) => {\n\n        return (<div className = 'color-tray__element' key = {elmnt.id}>\n            <div \n            className = 'color-tray__element__color'\n            style = {{backgroundColor : elmnt.color}}></div>\n            <span className = 'color-tray__element__title'>{elmnt.title}</span>\n        </div>)\n\n    });\n\n    return (<div className = 'color-tray'>\n        {ColorElements}\n    </div>)\n\n}\n\nexport default ColorTray;","import {Component} from 'react';\n\nimport Chart from '../../components/Chart/Chart';\nimport ControlPanel from '../../components/ControlPanel/ControlPanel';\nimport ColorTray from '../../components/ColorTray/ColorTray';\nimport './SortVisualizer.css';\n\nclass SortVisualizer extends Component {\n\n    state = {\n        trace : [],\n        array : [],\n        compareArr : [],\n        swapArr : [],\n        sortedIndices : [],\n        traceStep : -1,\n        speed : 1,\n        timeoutQueue : [],\n    }\n\n    componentDidMount(){\n        this._reset(this.props.array);\n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        if(prevProps.array !== this.props.array){\n            console.log(\"THIS IS RUNNING\");\n            this._reset(this.props.array);\n\n        }\n\n        if(prevState.trace !== this.props.trace){\n            this.clearQueue();\n            this.setState({trace : this.props.trace});\n\n        }\n\n    }\n\n    _reset = (array) => {\n        this.setState({\n            trace : [],\n            array : [...array],\n            compareArr : [],\n            swapArr : [],\n            sortedIndices : [],\n            traceStep : -1,\n        });\n    }\n\n    _setVisualization = (item) => {\n        this.setState(() => ({\n            array : item.array,\n            compareArr : item.compare,\n            swapArr : item.swap,\n            sortedIndices : item.sortedIndices\n        }));        \n  \n    }    \n\n    speedSelector = (speed) => {\n\n        const playing = this.state.timeoutQueue.length > 0;\n\n        this.pause();\n        this.setState({ \n            speed : speed\n        }, () => {\n            if(playing) this.continue();\n        });\n    }\n\n\n    clearQueue = () => {\n\n        this.state.timeoutQueue.forEach((item, i) => {\n            clearTimeout(item);\n        });\n\n        this.setState({timeoutQueue : []});\n\n    }\n\n\n    play = (trace) => {\n\n        this.props.repeatDisableHandler(false);\n\n        const queue = [];\n\n        const timer = 250 / this.state.speed;\n\n        trace.forEach((item, i) => {\n            let id = setTimeout((item) => {\n                this.setState((prevState) => ({traceStep : prevState.traceStep + 1}),\n                this._setVisualization(item));\n            }, i * timer, item);\n\n            queue.push(id);\n        });\n\n        let id = setTimeout(this.clearQueue, trace.length * timer);\n\n        queue.push(id);\n\n        this.setState({timeoutQueue : queue});\n\n    }\n\n    pause = () => {\n        this.clearQueue();\n    }\n\n\n    continue = () => {\n        const trace = this.state.trace.slice(this.state.traceStep);\n        this.play(trace);\n    }\n\n    restart = () => {\n        this.clearQueue();\n\n        this.setState({\n            array : [...this.props.array],\n            traceStep : -1,\n            compareArr : [],\n            swapArr : [],\n            sortedIndices : []\n        });\n\n        this.play(this.state.trace);\n\n    }\n\n\n    render(){\n\n        let playerFunction = () => this.play(this.state.trace);\n\n        if(this.state.traceStep !== -1){\n            playerFunction = this.continue;\n        }\n\n        const playState = this.state.timeoutQueue.length > 0;\n\n        return (\n        <div className = 'sort-visualizer'>\n                <Chart \n                array = {this.state.array} \n                compareArr = {this.state.compareArr} \n                swapArr = {this.state.swapArr}\n                size = {this.props.size}\n                />\n                <ControlPanel \n                onPause = {this.pause}\n                onPlay = {playerFunction}\n                onSpeedSelect = {this.speedSelector}\n                playing = {playState}\n                selected = {this.props.selected}\n                onRestart = {this.restart}\n                repeatDisabled = {this.props.repeatDisabled}\n                />\n                <ColorTray/>\n        </div>);\n    }\n\n\n}\n\nexport default SortVisualizer;","// function newTrace(arr){\n//     return [{\n//         array : [...arr],\n//         groupA : [],\n//         groupB : [],\n//     }]\n// }\n// function addToTrace(trace, arr, grpA = [], grpB = []){\n//     trace.push({\n//         array : [...arr],\n//         groupA : [...grpA],\n//         groupB : [...grpB],\n//     })\n// }\n\n// function swap(array, i, j){\n//     let temp = array[i];\n//     array[i] = array[j];\n//     array[j] = temp;\n// }\n\nconst newTrace = (arr) => {\n    return [{\n        array : [...arr],\n        compare : [],\n        swap : [],\n        sortedIndices : []\n    }];\n}\nconst addToTrace = (trace, arr, sort, cmp = [], swp = []) => {\n    trace.push({\n        array : [...arr],\n        compare : [...cmp],\n        swap : [...swp],\n        sortedIndices : [...sort]\n    });\n}\n\nconst swap = (array, i, j) => {\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n}\n\nconst lastSorted = (trace) => {\n    return trace[trace.length - 1].sortedIndices;\n}\n\nexport {newTrace, addToTrace, swap,lastSorted}","import {newTrace, addToTrace, swap, lastSorted} from './helpers'\n\nexport const bubbleSort = (arr) => {\n\n    const array = [...arr];\n\n    const trace =  newTrace(array);\n\n    for(let i = 0; i < array.length - 1;i++){\n\n        for(let j = 0; j < array.length - i - 1; j++){\n\n            addToTrace(trace, array,lastSorted(trace),[j, j+1]);\n\n            if(array[j] > array[j + 1]){\n                \n                addToTrace(trace, array, lastSorted(trace),[],[j, j+1]);\n                addToTrace(trace, array, lastSorted(trace),[],[j, j+1]);\n\n                swap(array, j, j+1);\n                \n                addToTrace(trace, array, lastSorted(trace));\n\n            }\n        }\n    }\n\n    addToTrace(trace, array, lastSorted(trace));\n\n    return trace;\n\n}\n\n","import {newTrace, addToTrace, lastSorted} from './helpers'\n\nexport const insertionSort = (arr) => {\n\n    const array = [...arr];\n\n    let trace =  newTrace(array);\n\n    for(let i = 1; i < array.length; i++){\n\n        let key = array[i];\n        let j = i - 1;\n\n        while(j >= 0 && array[j] > key){\n            addToTrace(trace, array,lastSorted(trace), [i, j]);\n            array[j + 1] = array[j];\n            j -=1;\n        }\n\n        addToTrace(trace, array, lastSorted(trace), [], [i, j+1]);\n        addToTrace(trace, array, lastSorted(trace), [], [i, j+1]);\n\n        array[j + 1] = key;\n        addToTrace(trace, array,lastSorted(trace));\n\n    }\n\n    return trace;\n}\n\nexport default insertionSort;","import {newTrace, addToTrace, lastSorted} from './helpers'\n\nexport const mergeSort = (arr) => {\n\n    const array = [...arr];\n\n    let trace = newTrace(array);\n    \n    function merge(array, l,m, h){\n\n        let l1 = m - l + 1;\n        let l2 = h - m;\n    \n        let array1 = [];\n        let array2 = [];\n    \n        for(let i = 0; i < l1; i+=1){\n            array1[i] = array[l + i]\n        }\n    \n        for(let j = 0; j < l2; j++){\n            array2[j] = array[m + 1 + j]\n        }\n    \n        let i = 0; \n        let j = 0; \n        let k = l;\n    \n        while((i < l1) && (j < l2)){\n\n            addToTrace(trace, array,lastSorted(trace),[l + i, m + 1 + j]);\n\n            if(array1[i] <= array2[j]){\n                addToTrace(trace, array,lastSorted(trace), [], [k, l + i]);\n                addToTrace(trace, array,lastSorted(trace), [], [k, l + i]);\n                array[k] = array1[i];\n                addToTrace(trace, array, lastSorted(trace));\n\n                i+=1;\n            }else{\n                addToTrace(trace, array,lastSorted(trace), [], [k, m + 1 + j]);\n                addToTrace(trace, array,lastSorted(trace), [], [k, m + 1 + j]);\n                array[k] = array2[j];\n                addToTrace(trace, array,lastSorted(trace));\n                j+=1;\n            }\n    \n            k+=1;\n    \n        }\n    \n        while(i < l1){\n            addToTrace(trace, array,lastSorted(trace), [], [k, l + i]);\n            addToTrace(trace, array,lastSorted(trace), [], [k, l + i]);\n            array[k] = array1[i];\n            addToTrace(trace, array, lastSorted(trace));\n            i+=1;\n            k+=1;\n        }\n    \n        while(j < l2){\n            addToTrace(trace, array,lastSorted(trace), [], [k, m + 1 + j]);\n            addToTrace(trace, array,lastSorted(trace), [], [k, m + 1 + j]);\n            array[k] = array2[j];\n            addToTrace(trace, array,lastSorted(trace));\n            j+=1;\n            k+=1;\n        }    \n    \n    }\n    \n    \n    \n    function recursiveSort(array, l, h){\n    \n        if(l < h){\n    \n            let m = Math.floor((l + h)/2);\n            recursiveSort(array, l, m);\n            recursiveSort(array, m + 1, h);\n            merge(array, l, m, h);\n        }\n    }\n\n    recursiveSort(array, 0, array.length - 1);\n\n    return trace;\n}\n\nexport default mergeSort;","import {newTrace, addToTrace, swap, lastSorted} from './helpers'\n\nexport const quickSort = (arr) => {\n\n    const array = [...arr];\n\n    let trace = newTrace(array);\n\n    function partisan(array, low, high){\n\n        let pivot = array[high];\n        let counter_index = low;\n    \n        for(let i = low; i < high; i++){\n            addToTrace(trace, array,lastSorted(trace), [high, i]);\n            if(array[i] <= pivot){\n                addToTrace(trace, array,lastSorted(trace), [], [counter_index, i]);\n                addToTrace(trace, array,lastSorted(trace), [], [counter_index, i]);\n                swap(array, counter_index, i);\n                addToTrace(trace, array, lastSorted(trace));\n                counter_index+=1;\n            }\n        }\n\n        addToTrace(trace, array,lastSorted(trace),[], [counter_index, high]);\n        addToTrace(trace, array,lastSorted(trace),[], [counter_index, high]);\n\n        swap(array, counter_index, high);\n\n        addToTrace(trace, array,lastSorted(trace));\n\n        return counter_index;\n    \n    }    \n\n    function recursiveSort(array, low, high){\n\n        if(low < high){\n    \n            let pivot = partisan(array, low, high);\n    \n            recursiveSort(array, low, pivot - 1);\n            recursiveSort(array, pivot + 1, high);\n    \n        }\n    } \n\n    recursiveSort(array, 0, array.length - 1);\n\n    return trace;\n\n\n}\n\nexport default quickSort;","import {newTrace, addToTrace, swap, lastSorted} from './helpers'\n\nexport const selectionSort = (arr) => {\n\n    const array = [...arr];\n\n    const trace =  newTrace(array);\n\n    for(let i = 0; i < array.length - 1; i++){\n\n        let minIdx = i;\n\n        for(let j = i + 1; j < array.length; j++){\n\n            addToTrace(trace, array,lastSorted(trace),[minIdx, j]);\n\n            if(array[j] < array[minIdx]){\n                minIdx = j;\n            }\n        }\n\n        addToTrace(trace, array, lastSorted(trace),[],[i, minIdx]);\n        addToTrace(trace, array, lastSorted(trace),[],[i, minIdx]);\n        \n        swap(array, i, minIdx);\n\n        addToTrace(trace, array, lastSorted(trace));\n\n    }\n\n    return trace;\n}\n\n\n\nexport default selectionSort;\n\n","import {Component} from 'react';\n\nimport NavigationBar from './components/Navigation/NavigationBar/NavigationBar';\nimport SortVisualizer from './containers/SortVisualizer/SortVisualizer';\nimport * as algorithms from './algorithms/index';\nimport './App.css';\n\n\nclass App extends Component{\n\n    ALGORITHMS = {\n        'selectionSort' : algorithms.selectionSort,\n        'bubbleSort' : algorithms.bubbleSort,\n        'insertionSort' : algorithms.insertionSort,\n        'quickSort' : algorithms.quickSort,\n        'mergeSort' : algorithms.mergeSort\n    }\n\n    state = {\n        array : [],\n        trace : [],\n        algorithm : 'selectionSort',\n        size : 100,\n        sideDrawerDisplay : false,\n        repeatDisabled : true\n    }\n\n\n    componentDidMount() {\n        this._generateArray();\n    }\n\n    _generateArray = () => {\n\n        const arr = [];\n\n        const size = this.state.size;\n\n        for(let i = 0; i < size; i++){\n            const num = Math.round((Math.random() * (370 - 50)) + 50);\n            arr.push(num);\n        }   \n\n        this.setState({\n            array : arr,\n        }, this._generateTrace)        \n    }\n\n    _generateTrace = () =>{\n      \n        const nums = [...this.state.array];\n\n        const sort = this.ALGORITHMS[this.state.algorithm];\n\n        if(sort){\n\n            const trace = sort(nums);\n            \n            this.setState({\n                trace : trace,\n            })\n        }\n    }\n\n    sizeSelector = (size) => {\n        \n        this.setState({\n            size : size,\n        }, this._generateArray);\n\n    }\n\n    sortSelector = (algorithm) => {\n\n        this.repeatDisableHandler(true);\n\n        this.setState({ \n            algorithm : algorithm\n        }, this._generateArray)\n    }\n\n    sideDrawerToggle = () =>{\n\n        this.setState((prevState) => {\n            return{\n                sideDrawerDisplay : !prevState.sideDrawerDisplay\n            }\n        });\n    }\n\n    repeatDisableHandler = (disabled) => {\n\n        this.setState({repeatDisabled : disabled});\n\n    }\n\n      \n    render(){\n\n        return (\n            <div className = 'app'>\n                <NavigationBar sortSelector = {this.sortSelector}\n                sizeSelector = {this.sizeSelector}\n                sideDrawerToggle = {this.sideDrawerToggle}\n                sideDrawerDisplay = {this.state.sideDrawerDisplay}/>\n                <SortVisualizer\n                array = {this.state.array}\n                trace = {this.state.trace}\n                size = {this.state.size}\n                selected = {this.state.algorithm !== ''}\n                repeatDisabled = {this.state.repeatDisabled}\n                repeatDisableHandler = {this.repeatDisableHandler}\n                />\n            </div>\n        )\n\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faChevronUp, faChevronDown, faPlay, faRedo, faBars, faPause, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faChevronUp, faChevronDown, faPlay,faRedo, faBars, faPause, faTimes);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}